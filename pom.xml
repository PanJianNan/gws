<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.yabadun</groupId>
    <artifactId>gws</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!-- packaging: 打包的机制，如pom, jar, maven-plugin, ejb, war, ear, rar, par   -->
    <packaging>war</packaging>

    <!-- jar包版本号 -->
    <properties>
        <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
        <maven.test.skip>true</maven.test.skip>
        <version.spring>4.0.4.RELEASE</version.spring>
        <version.aspectj>1.8.2</version.aspectj>
        <version.mysql>5.1.24</version.mysql>
        <version.servlet>3.1.0</version.servlet>
        <version.log4j>1.2.17</version.log4j>
        <version.slf4j.log4j12>1.7.9</version.slf4j.log4j12>
        <version.junit>4.10</version.junit>
        <version.easymock>3.2</version.easymock>
        <version.mokito>1.9.5</version.mokito>
        <version.h2>1.4.187</version.h2>
        <version.metaq>1.4.6.2</version.metaq>
        <version.ibatis>2.3.4.726</version.ibatis>
        <version.xmemcached>1.4.2</version.xmemcached>
        <version.commons.httpclient>3.0.1</version.commons.httpclient>
        <version.commons.logging>1.1.1</version.commons.logging>
        <version.commons.collections>3.2.1</version.commons.collections>
        <version.commons.lang3>3.3.1</version.commons.lang3>
        <version.commons.fileupload>1.3.1</version.commons.fileupload>
        <version.commons.beanutils>1.8.3</version.commons.beanutils>
        <version.commons.io>1.3.2</version.commons.io>
        <version.commons.codec>1.9</version.commons.codec>
        <version.zookeeper>3.4.6</version.zookeeper>
        <version.zkclient>0.7</version.zkclient>
        <version.druid>1.0.9</version.druid>
        <version.fastjson>1.2.7</version.fastjson>
        <version.dubbo>2.5.3</version.dubbo>
        <version.mybatis>3.2.6</version.mybatis>
        <version.mybatis.spring>1.2.2</version.mybatis.spring>
        <version.jackson.mapper>1.9.9</version.jackson.mapper>
        <version.quartz>2.2.1</version.quartz>
        <version.spring.memcached>3.4.0</version.spring.memcached>
        <version.dom4j>1.6.1</version.dom4j>
        <version.aliyun.openservices>1.2.2</version.aliyun.openservices>
        <version.joda.time>2.9.1</version.joda.time>
        <version.protobuf.java>2.4.1</version.protobuf.java>
        <version.jackson.all>1.8.5</version.jackson.all>
        <version.velocity>1.7</version.velocity>
        <version.velocity.tools>2.0</version.velocity.tools>
        <version.fis.velocity.tools>1.0.0</version.fis.velocity.tools>
        <version.jstl>1.2</version.jstl>
        <version.solr.solrj>4.7.2</version.solr.solrj>
        <version.jedis>2.7.3</version.jedis>
        <version.spring.data.redis>1.6.0.RELEASE</version.spring.data.redis>

        <!--其它-->
        <version.cglib>3.1</version.cglib>
        <version.aspectjweaver>1.8.2</version.aspectjweaver>
        <version.antlr>2.7.7</version.antlr>
        <version.httpclient>4.5.1</version.httpclient>
        <version.dozer>5.5.1</version.dozer>
    </properties>

    <!-- 依赖关系 -->
    <dependencies>
        <!-- Servelt -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${version.servlet}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>4.0.4.RELEASE</version>
            <scope>test</scope>
        </dependency>

        <!-- JSP，其实并不是必须的 -->
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.2</version>
        </dependency>

        <!-- Spring framework -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${version.spring}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${version.spring}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${version.spring}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${version.spring}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${version.spring}</version>
        </dependency>
        <!-- Spring AOP dependency -->
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>${version.cglib}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${version.aspectjweaver}</version>
        </dependency>
        <!-- Spring MVC -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${version.spring}</version>
        </dependency>

        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>${version.dom4j}</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${version.commons.collections}</version>
        </dependency>
        <dependency>
            <groupId>antlr</groupId>
            <artifactId>antlr</artifactId>
            <version>${version.antlr}</version>
        </dependency>

        <!-- log -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${version.slf4j.log4j12}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${version.log4j}</version>
        </dependency>

        <!-- tool -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${version.commons.lang3}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${version.commons.lang3}</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${version.commons.fileupload}</version>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>${version.commons.beanutils}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${version.commons.io}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${version.httpclient}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.5.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.7.1</version>
        </dependency>
        <dependency>
            <groupId>org.jdom</groupId>
            <artifactId>jdom</artifactId>
            <version>1.1</version>
        </dependency>
        <!-- 使用JSON的时候出问题，需要下面这个包,但是我觉得如果使用fastjson那就应该不需要这个包了吧？ http://blog.csdn.net/eilent/article/details/6927700 -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.4</version>
        </dependency>

        <!-- javaMail start -->
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.1</version>
        </dependency>
        <!-- javaMail end -->

        <!-- java关于处理javascript的类库 删掉好像也没报错-->
        <dependency>
            <groupId>rhino</groupId>
            <artifactId>js</artifactId>
            <version>1.7R2</version>
        </dependency>
        <!-- jstl的核心标签库 关键是删了后台要报错，但是加上tomcat又说多余...-->
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
        <!-- java的事务规范，当用到事务处理时是必需的，hebernate中用到 删掉好像也没报错 -->
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>1.1</version>
        </dependency>

        <!-- 替换ojdbc14.jar会报错 todo -->
        <!--<dependency>
            <groupId>ojdbc</groupId>
            <artifactId>ojdbc</artifactId>
            <version>14</version>
        </dependency>-->
        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.6</version>
        </dependency>

        <!-- C3PO是一个数据库连接池，Hibernate可以配置为使用C3PO连接池。如果你准备用这个连接池，就需要这个jar包。 -->
        <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <version>0.9.1.2</version>
        </dependency>
        <!-- :DBCP数据库连接池，Apache的Jakarta组织开发的，Tomcat4的连接池也是DBCP。 -->
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>1.3</version>
        </dependency>
        <!-- DBCP数据库连接池，Apache的Jakarta组织开发的，Tomcat4的连接池也是DBCP。
实 际上Hibernate自己也实现了一个非常非常简单的数据库连接池，加上上面3个，你实际上可以在Hibernate上选择4种不同的数据库连接池， 选择哪一个看个人的偏好，不过DBCP可能更通用一些。另外强调一点，如果在EJB中使用Hibernate，一定要用App Server的连接池，不要用以上4种连接池，否则容器管理事务不起作用。 -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.2.2</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.6</version>
        </dependency>
        <!-- 删掉也没报错！ OGNL(Object Graph Navigation Language)是一种表达式语言,使用它可以使表达式与java对象中的getter和setter属性绑定,且一个OGNL表达式可以进行存和取两 方面的操作.ognl.jar是java对ognl的支持，webwork加载的。 -->
        <dependency>
            <groupId>ognl</groupId>
            <artifactId>ognl</artifactId>
            <version>2.7.3</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/net.sf.json-lib/json-lib -->
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.3</version>
            <classifier>jdk15</classifier>
        </dependency>
        <!-- https://mvnrepository.com/artifact/net.sf.ehcache/ehcache-core -->
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>2.5.1</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.googlecode.xmemcached/xmemcached -->
        <dependency>
            <groupId>com.googlecode.xmemcached</groupId>
            <artifactId>xmemcached</artifactId>
            <version>1.2.5</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.freemarker/freemarker -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.20</version>
        </dependency>
        <!--一个定时器-->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${version.quartz}</version>
        </dependency>
        <!-- EZMorph是一个简单的java类库用于将一种对象转换成另外一种对象。EZMorph原先是Json-lib项目中的转换器。EZMorph支持原始数据类型（Primitive），对象（Object），多维数组转换与DynaBeans的转换。兼容JDK1.3.1，整个类库大小只有76K左右。
在Java EE开发常用的struts2中，json的处理便使用了EZMorph库。 -->
        <dependency>
            <groupId>net.sf.ezmorph</groupId>
            <artifactId>ezmorph</artifactId>
            <version>1.0.6</version>
        </dependency>
        <!-- java图像处理 -->
        <dependency>
            <groupId>jmagick</groupId>
            <artifactId>jmagick</artifactId>
            <version>6.6.9</version>
        </dependency>

        <!-- struts2 -->
        <dependency>
            <groupId>org.apache.struts</groupId>
            <artifactId>struts2-core</artifactId>
            <version>2.2.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.struts</groupId>
            <artifactId>struts2-spring-plugin</artifactId>
            <version>2.2.1</version>
        </dependency>

        <!--包含webwork构建所依赖的xwork类库，webwork是基于xwork的 删掉好像也没报错 -->
        <dependency>
            <groupId>org.apache.struts.xwork</groupId>
            <artifactId>xwork-core</artifactId>
            <version>2.2.1</version>
        </dependency>

        <!--webwork的一个通用功能类库 删掉好像也没报错 -->
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>oscore</artifactId>
            <version>2.2.4</version>
        </dependency>
        <!-- rife原来是一个基于组件模型的Java Web框架，被webwork集成 删掉好像也没报错 -->
        <dependency>
            <groupId>org.rifers</groupId>
            <artifactId>rife-continuations</artifactId>
            <version>0.0.2</version>
        </dependency>
        <!-- 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容 -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.8.3</version>
        </dependency>

        <!-- quartz -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${version.quartz}</version>
        </dependency>

        <!--SOAP with Attachments API for Java。能为java提供按照SOAP规范的收发信息。-->
        <!--<dependency>
            <groupId>com.sun.xml.messaging.saaj</groupId>
            <artifactId>saaj-impl</artifactId>
            <version>1.3.25</version>
        </dependency>-->
        <!-- 光云库里没有上面那个，只有下面这个，先用用吧，不影响功能就好了 -->
        <dependency>
            <groupId>xfire</groupId>
            <artifactId>saaj-impl</artifactId>
            <version>1.3</version>
        </dependency>

        <!--以下来自于本地maven仓库，相应jar包在WEB-INF/lib目录下-->
        <dependency>
            <groupId>com.yabadun</groupId>
            <artifactId>alipay3.2</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.yabadun</groupId>
            <artifactId>ojdbc14</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.yabadun</groupId>
            <artifactId>sqljdbc4</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.yabadun</groupId>
            <artifactId>tenpay</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.yabadun</groupId>
            <artifactId>uploadbean</artifactId>
            <version>1.0.0</version>
        </dependency>
        <!--以上来自于本地maven仓库，相应jar包在WEB-INF/lib目录下-->

    </dependencies>

    <build>
        <finalName>gws</finalName>

        <plugins>
            <!-- 编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- 发布插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- 源码插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- mybatis反向插件 -->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.2</version>
            </plugin>

            <!-- maven tomcat插件，用于本地测试 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>tomcat-maven-plugin</artifactId>
                <version>1.1</version>
                <configuration>
                    <url>http://127.0.0.1</url>
                    <port>80</port>
                    <path>/</path>
                    <uriEncoding>utf-8</uriEncoding>
                    <charset>utf-8</charset>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>